---

- name: Add basic development packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    name:
      - python3-pip
    state: present

- name: Create default virtual-environment
  ansible.builtin.file:
    state: directory
    path: "{{ setup_user['ansible_facts']['ansible_user_dir'] }}/.virtualenvs/default"
    owner: "{{ setup_user['ansible_facts']['ansible_user_id'] }}"
    group: "{{ setup_user['ansible_facts']['ansible_user_id'] }}"

- name: Installing ansible pip-packages
  ansible.builtin.pip:
    name:
      - ansible
      - yamllint
      - ipykernel
      - ansible-lint
      - mkdocs
      - mkdocs[i18n]
      - netaddr
      - podman-compose
      - black
      - black[jupyter]
    state: present
    virtualenv_command: "/usr/bin/python3 -m venv"
    virtualenv: "{{ setup_user['ansible_facts']['ansible_user_dir'] }}/.virtualenvs/default"
    extra_args: --upgrade
  become: false

- name: Install jupyter-packages
  ansible.builtin.pip:
    name:
      - jupyter
    state: present
    virtualenv: "{{ setup_user['ansible_facts']['ansible_user_dir'] }}/.virtualenvs/default"
    extra_args: --upgrade
  become: false
  notify: Install jupyter-kernel

- name: Check for user namespaces
  ansible.builtin.command:
    cmd: sysctl user/max_user_namespaces
  register: namespaces
  changed_when: false

- name: Enable user-namespaces, if missing
  ansible.posix.sysctl:
    state: present
    name: user.max_user_namespaces
    value: '65535'
    sysctl_set: true
    reload: true
  when: "{{ namespaces.stdout | regex_search('[\\d]{1,5}') | int }} > 0"

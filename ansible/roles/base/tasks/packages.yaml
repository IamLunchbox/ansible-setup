---
- name: Updating cache
  apt:
    update_cache: true
    cache_valid_time: 3600

- name: Adding Atom Key
  ansible.builtin.apt_key:
    url: "https://packagecloud.io/AtomEditor/atom/gpgkey"
    state: present
  when: ansible_facts['virtualization_role'] == 'guest'

- name: Adding Atom Repo
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main
    state: present
    update_cache: true
  when: ansible_facts['virtualization_role'] == 'guest'

- name: Check installed packages
  package_facts:
    manager: auto

- name: Adding greeter
  ansible.builtin.apt:
    name:
      - lightdm
      - lightdm-gtk-greeter
    state: present
  notify:
    - set graphical target
  when: >
    'gdm3' not in ansible_facts['packages'] or
    'sddm' not in ansible_facts['packages']

- name: Define package list to install
  set_fact:
    package_selection: "pkgs_{{ lookup('vars','ansible_facts')\
      .distribution | lower }}_{{ lookup('vars','ansible_facts')\
      .virtualization_role }}"

- name: Install packages
  ansible.builtin.apt:
    name: "{{ lookup('vars',package_selection) }}"
    state: present

- name: Define package list to remove
  set_fact:
    package_removal: "rmv_{{ lookup('vars','ansible_facts')\
      .distribution | lower }}_{{ lookup('vars','ansible_facts')\
      .virtualization_role }}"

- name: Remove packages
  ansible.builtin.apt:
    name: "{{ lookup('vars',package_removal) }}"
    state: absent

- name: Install picom
  ansible.builtin.apt:
    name:
      - picom
    state: present
  when: ansible_facts['distribution_version'] != "20.04"
  notify: remove compton

- name: Install Virtualbox-Agent
  ansible.builtin.apt:
    name:
      - virtualbox-guest-x11
      - virtualbox-guest-utils
    state: present
  when: ansible_facts['virtualization_type'] == "virtualbox"
  notify: add user to vboxsf group

- name: Install Virtualbox
  ansible.builtin.apt:
    name:
      - virtualbox
    state: present
  when: ansible_facts['virtualization_role'] == "host"
  notify: add user to vboxusers group

- name: Install Qemu-Agent, if appropriate
  ansible.builtin.apt:
    name: qemu-guest-agent
    state: present
  when: ansible_facts['virtualization_type'] == "kvm"

- name: Hiding annoying launcher files
  lineinfile:
    path: "/usr/share/applications/{{ hide_launchers.path }}.desktop"
    regexp: '^Hidden='
    line: 'Hidden=true'
    state: present
    create: false
  loop: "{{ launchers }}"
  loop_control:
    loop_var: hide_launchers
  when: hide_launchers.pkg in ansible_facts['packages']

- name: Customize launcher files
  lineinfile:
    path: "/usr/share/applications/{{ customized_launchers.path }}.desktop"
    regexp: '^"{{ customized_launchers.substitue }}"$'
    line: "{{ customized_launchers.parameter }}"
    state: present
    create: false
  loop: "{{ custom_launchers }}"
  loop_control:
    loop_var: customized_launchers
  when: customized_launchers.pkg in ansible_facts['packages']

- name: Upgrading and autoremoving
  apt:
    name: "*"
    state: latest
    autoremove: true
    autoclean: true
  when: upgrade_pkgs or upgrade_pkgs is undefined

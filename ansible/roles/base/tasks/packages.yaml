---
- name: Updating cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Adding VSCodium Key
  ansible.builtin.apt_key:
    url: "https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg"
    state: present
  when: ansible_facts['virtualization_role'] == 'guest'

- name: Adding VSCodium Repo
  ansible.builtin.apt_repository:
    repo: deb https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/debs vscodium main
    state: present
    update_cache: true
  when: ansible_facts['virtualization_role'] == 'guest'

- name: Define package list to install
  ansible.builtin.set_fact:
    package_selection: "pkgs_vm_{{ lookup('vars','ansible_facts')\
      .virtualization_role }}"

- name: Install packages
  ansible.builtin.apt:
    name: "{{ lookup('vars',package_selection) }}"
    state: present

- name: Install latest firefox for all
  ansible.builtin.apt:
    name: firefox
    state: present
  when: ansible_facts['distribution'] != 'Kali'

- name: Install firefox esr for kali
  ansible.builtin.apt:
    name: firefox
    state: present
  when: ansible_facts['distribution'] != 'Kali'

- name: Define package list to remove
  ansible.builtin.set_fact:
    package_removal: "rmv_vm_{{ lookup('vars','ansible_facts')\
      .virtualization_role }}"

- name: Remove packages
  ansible.builtin.apt:
    name: "{{ lookup('vars',package_removal) }}"
    state: absent

- name: Install Virtualbox-Agent
  ansible.builtin.apt:
    name:
      - virtualbox-guest-x11
      - virtualbox-guest-utils
    state: present
  when: ansible_facts['virtualization_type'] == "virtualbox"
  notify: add user to vboxsf group

- name: Install Virtualbox
  ansible.builtin.apt:
    name:
      - virtualbox
    state: present
  when: ansible_facts['virtualization_role'] == "host"
  notify: add user to vboxusers group

- name: Install Qemu-Agent, if appropriate
  ansible.builtin.apt:
    name:
      - qemu-guest-agent
      - spice-vdagent
    state: present
  when: ansible_facts['virtualization_type'] == "kvm"

- name: Check for annoying launcher files
  ansible.builtin.stat:
    path: "/usr/share/applications/{{ hide_launchers }}.desktop"
  loop: "{{ launchers }}"
  loop_control:
    loop_var: hide_launchers
  register: hidden_launchers

- name: Hiding annoying launcher files
  ansible.builtin.lineinfile:
    path: "{{ finally_hide_launchers.stat.path }}"
    regexp: '^Hidden='
    line: 'Hidden=true'
    state: present
    create: false
  loop: "{{ hidden_launchers.results | flatten }}"
  loop_control:
    loop_var: finally_hide_launchers
  when: finally_hide_launchers.stat.exists

- name: Upgrading and autoremoving
  ansible.builtin.apt:
    name: "*"
    state: latest
    autoremove: true
    autoclean: true
  when: upgrade_pkgs or upgrade_pkgs is undefined

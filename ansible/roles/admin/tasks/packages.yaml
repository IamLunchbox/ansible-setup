---

- name: Check for Seafile-keyfile
  ansible.builtin.stat:
    path: /usr/share/keyrings/seafile-archive-keyring.gpg
  register: seafile_keyfile

- name: Set up seafile
  when: >
    ansible_facts['virtualization_role'] == 'guest' and
    not seafile_keyfile.stat.exists
  block:
    - name: Create seafile build-directory
      ansible.builtin.tempfile:
        state: directory
        suffix: _base
      register: build_dir_seafile

    - name: Download Seafile Key
      ansible.builtin.get_url:
        url: "https://linux-clients.seafile.com/seafile.asc"
        dest: "{{ build_dir_seafile.path }}/seafile-archive-keyring"
        owner: root
        group: root
        mode: '0600'

    - name: Dearmor Seafile Key
      ansible.builtin.command:
        cmd: >
          gpg --yes --dearmor
          {{ build_dir_seafile.path }}/seafile-archive-keyring
      changed_when: false

    - name: Copy dearmored key
      ansible.builtin.copy:
        src: "{{ build_dir_seafile.path }}/seafile-archive-keyring.gpg"
        remote_src: true
        dest: /usr/share/keyrings/seafile-archive-keyring.gpg
        owner: root
        group: root
        mode: '0644'

    - name: Debug repo variable
      ansible.builtin.debug:
        msg: "deb
          [ arch=amd64 signed-by=/usr/share/keyrings/\
          seafile-archive-keyring.gpg ]
          https://linux-clients.seafile.com/seafile-deb/\
          {{ ansible_facts['distribution_release'] }}/ stable main"

    - name: Add Seafile Repo
      ansible.builtin.apt_repository:
        repo: "deb
          [ arch=amd64 signed-by=/usr/share/keyrings/\
          seafile-archive-keyring.gpg ]
          https://linux-clients.seafile.com/seafile-deb/\
          {{ ansible_facts['distribution_release'] }}/ stable main"
        state: present
        update_cache: true

- name: Check for Terraform-keyfile
  ansible.builtin.stat:
    path: /usr/share/keyrings/terraform-archive-keyring.gpg
  register: terraform_keyfile

- name: Set up terraform
  when: ansible_facts['virtualization_role'] == 'guest' and
    not terraform_keyfile.stat.exists
  block:
    - name: Create terraform build-directory
      ansible.builtin.tempfile:
        state: directory
        suffix: _base
      register: build_dir_terraform

    - name: Download teafile Key
      ansible.builtin.get_url:
        url: "https://apt.releases.hashicorp.com/gpg"
        dest: "{{ build_dir_terraform.path }}/terraform-archive-keyring"
        owner: root
        group: root
        mode: '0600'

    - name: Dearmor terraform key
      ansible.builtin.command:
        cmd: >
          gpg --yes --dearmor
          {{ build_dir_terraform.path }}/terraform-archive-keyring
      changed_when: false

    - name: Copy dearmored terraform key
      ansible.builtin.copy:
        src: "{{ build_dir_terraform.path }}/terraform-archive-keyring.gpg"
        remote_src: true
        dest: /usr/share/keyrings/terraform-archive-keyring.gpg
        owner: root
        group: root
        mode: '0644'

    - name: Add terraform Repo
      ansible.builtin.apt_repository:
        repo: "deb
          [ arch=amd64 signed-by=/usr/share/keyrings/\
          terraform-archive-keyring.gpg ]
          https://apt.releases.hashicorp.com
          {{ ansible_facts['distribution_release'] }} main"
        state: present
        update_cache: true

- name: Add basic apt packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    name:
      - keepassxc
      - python3-pip
      - seafile-gui
      - openssh-client
      - yubioath-desktop
      - terraform
      - resolvconf
      - wireguard
    state: present

- name: Install ansible pip-packages
  ansible.builtin.pip:
    name:
      - ansible-core==2.14
      - yamllint
      - ansible-lint
      - molecule
      - molecule-podman
      - netaddr
      - ipykernel
      - podman-compose
    state: present
    extra_args: --upgrade
  become: false

#- name: Check for hcloud-cli
#  ansible.builtin.stat:
#    path: "{{ ansible_facts['user_dir'] }}/.local/bin/hcloud"
#  register: hcloud_cli

- name: Create local executable dir
  ansible.builtin.file:
    path: "{{ ansible_facts['user_dir'] }}/.local/bin/"
    owner: "{{ ansible_facts['real_user_id'] }}"
    group: "{{ ansible_facts['real_group_id'] }}"
    mode: '0700'
    state: directory

#- name: Unzip hcloud-cli
#  ansible.builtin.unarchive:
#    dest: "{{ ansible_facts['user_dir'] }}/.local/bin/"
#    include: hcloud
#    owner: "{{ ansible_facts['real_user_id'] }}"
#    group: "{{ ansible_facts['real_group_id'] }}"
#    remote_src: true
#    src: "https://github.com/hetznercloud/cli/\
#      releases/download/v1.30.3/hcloud-linux-amd64.tar.gz"
#  when: not hcloud_cli.stat.exists

- name: Check for netclient-keyfile
  ansible.builtin.stat:
    path: /usr/share/keyrings/netclient-archive-keyring.gpg
  register: netclient_keyfile

- name: Set up netclient
  when: >
    ansible_facts['virtualization_role'] == 'guest' and
    not netclient_keyfile.stat.exists
  block:
    - name: Create netclient build-directory
      ansible.builtin.tempfile:
        state: directory
        suffix: _base
      register: build_dir_netclient

    - name: Download netclient Key
      ansible.builtin.get_url:
        url: "https://apt.netmaker.org/gpg.key"
        dest: "{{ build_dir_netclient.path }}/netclient-archive-keyring"
        owner: root
        group: root
        mode: '0600'

    - name: Dearmor netclient Key
      ansible.builtin.command:
        cmd: >
          gpg --yes --dearmor
          {{ build_dir_netclient.path }}/netclient-archive-keyring
      changed_when: false

    - name: Copy dearmored key
      ansible.builtin.copy:
        src: "{{ build_dir_netclient.path }}/netclient-archive-keyring.gpg"
        remote_src: true
        dest: /usr/share/keyrings/netclient-archive-keyring.gpg
        owner: root
        group: root
        mode: '0644'

    - name: Add netclient Repo
      ansible.builtin.lineinfile:
        line: deb [ arch=amd64 signed-by=/usr/share/keyrings/netclient-archive-keyring.gpg ] https:apt.netmaker.org stable main
        state: present
        create: true
        mode: '0644'
        owner: root
        group: root
        path: /etc/apt/sources.list.d/https_apt_netmaker_org.list
        
    - name: Update cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 0

- name: Install netclient
  ansible.builtin.apt:
    name: netclient
    state: present
  when: no_container_environment
